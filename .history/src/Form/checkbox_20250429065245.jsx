//t·∫°o menu ƒë·ªì u·ªëng. Ch·ªçn m√≥n mu·ªën mua, d√πng checkbox ƒë·ªÉ t√≠ch v√†o ƒë·ªì c·∫ßn mua
//menu c√≥ t√™n, gi√°, s·ªë l∆∞·ª£ng(t·ª± nh·∫≠p). ·ªü d∆∞·ªõi c√≥ √¥ nh·∫≠p s·ªë ti·ªÅn. n·∫øu t·ªïng ti·ªÅm ch·ªçn m√≥n l·ªõn h∆°n s·ªë ti·ªÅn t·ª´ √¥ nh·∫≠p th√¨ th√¥ng b√°o kh√¥ng ƒë·ªß ti·ªÅn
//n·∫øu ƒë·ªß ti·ªÅn th√¨ th√¥ng b√°o ƒë√£ ch·ªçn m√≥n th√†nh c√¥ng v√† s·ªë d∆∞ c√≤n l·∫°i
//bt2: t·∫°o form ƒë·ªÉ t·∫°o 1 sp, c√≥ th·ªÉ l∆∞u v√†o local storage sau ƒë√≥ hi·ªÉn th·ªã ra. V√† ti·∫øp t·ª•c n√¢ng cao l∆∞u v√†o session, cloud, backend(APi, Sql,..)


import React, { useState } from "react";
import "./SimpleMenu.css"; // üõë Import file CSS ri√™ng!

export default function SimpleMenu() {
  const menu = [
    { id: 1, name: "C√† ph√™ s·ªØa", price: 12000 },
    { id: 2, name: "C√† ph√™ ƒë√°", price: 10000 },
    { id: 3, name: "Sting d√¢u", price: 8000 },
    { id: 4, name: "Tr√† ƒë√°", price: 2000 },
  ];

  const [selections, setSelections] = useState({});
  const [wallet, setWallet] = useState(0);
  const [message, setMessage] = useState("");

  const handleSelect = (id) => {
    const newSelections = { ...selections };
    if (newSelections[id] && newSelections[id].selected) {
      newSelections[id].selected = false;
    } else {
      newSelections[id] = { selected: true, quantity: 1 };
    }
    setSelections(newSelections);
  };

  const handleQuantityChange = (id, change) => {
    const newSelections = { ...selections };
    if (newSelections[id]) {
      let newQuantity = newSelections[id].quantity + change;
      if (newQuantity < 1) {
        newQuantity = 1;
      }
      newSelections[id].quantity = newQuantity;
      setSelections(newSelections);
    }
  };

  const calculateTotal = () => {
    let total = 0;
    menu.forEach((item) => {
      const selectedItem = selections[item.id];
      if (selectedItem && selectedItem.selected) {
        total += item.price * selectedItem.quantity;
      }
    });
    return total;
  };

  const handleBuy = () => {
    const total = calculateTotal();
    if (total === 0) {
      setMessage("Ch∆∞a ch·ªçn m√≥n n√†o!");
    } else if (total > wallet) {
      setMessage("Kh√¥ng ƒë·ªß ti·ªÅn!");
    } else {
      const remaining = wallet - total;
      setMessage(`Mua th√†nh c√¥ng! S·ªë d∆∞ c√≤n l·∫°i: ${remaining}ƒë`);
    }
  };

  return (
      <div className="menu-container">
      
              <h2 className="menu-title">Menu</h2>
       <div> 
      {menu.map((item) => (
        <div key={item.id} className="menu-item">
          <input
            type="checkbox"
            checked={selections[item.id]?.selected || false}
            onChange={() => handleSelect(item.id)}
          />
          {item.name} ({item.price}ƒë)

          {selections[item.id]?.selected && (
            <span className="quantity-control">
              <button onClick={() => handleQuantityChange(item.id, -1)}>-</button>
              <span className="quantity">{selections[item.id].quantity}</span>
              <button onClick={() => handleQuantityChange(item.id, 1)}>+</button>
            </span>
              )}
              
          </div>
          </div>  
      ))}

      <div className="wallet-input">
        <label>S·ªë ti·ªÅn trong v√≠: </label>
        <input
          type="number"
          value={wallet}
          onChange={(e) => setWallet(Number(e.target.value))}
        />
      </div>

      <div className="buy-button">
        <button onClick={handleBuy}>Mua</button>
      </div>

      <div className="message">{message}</div>
    </div>
  );
}
